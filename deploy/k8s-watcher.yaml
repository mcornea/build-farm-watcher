apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-watcher
  namespace: default
  labels:
    app: k8s-watcher
    component: k8s-watcher
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-watcher
  labels:
    app: k8s-watcher
    component: k8s-watcher
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-watcher
  labels:
    app: k8s-watcher
    component: k8s-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-watcher
subjects:
- kind: ServiceAccount
  name: k8s-watcher
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-watcher
  namespace: default
  labels:
    app: k8s-watcher
    component: k8s-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-watcher
  template:
    metadata:
      labels:
        app: k8s-watcher
        component: k8s-watcher
    spec:
      serviceAccountName: k8s-watcher
      containers:
      - name: watcher
        image: quay.io/mcornea/build-farm-watcher
        imagePullPolicy: IfNotPresent
        env:
        - name: RESTART_INTERVAL
          value: "60s"
        - name: SLEEP_BEFORE_RESTART
          value: "5s"
        - name: NUM_WATCHERS
          value: "2"
        - name: LABEL_SELECTOR
          value: "app=build-farm"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
